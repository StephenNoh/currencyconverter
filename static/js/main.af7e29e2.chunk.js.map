{"version":3,"sources":["CurrencyRow.js","App.js","index.js"],"names":["CurrencyRow","props","currencyOptions","selectedCurrency","onChangeCurrency","amount","onChangeAmount","type","value","Math","round","onChange","map","currency","key","API_URL","App","toAmount","fromAmount","useState","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","setAmount","amountInFromCurrency","setAmountInFromCurrency","exchangeRate","setExchangeRate","useEffect","fetch","then","res","json","data","firstCurrency","Object","keys","rates","base","className","href","target","e","ReactDOM","render","document","getElementById"],"mappings":"iLAgBeA,MAdf,SAAqBC,GAAQ,IACjBC,EAA+ED,EAA/EC,gBAAiBC,EAA8DF,EAA9DE,iBAAkBC,EAA4CH,EAA5CG,iBAAkBC,EAA0BJ,EAA1BI,OAAQC,EAAkBL,EAAlBK,eACrE,OACI,6BACI,2BAAOC,KAAK,SAASC,MAAOC,KAAKC,MAAe,IAATL,GAAgB,IAAKM,SAAUL,IAClE,4BAAQE,MAASL,EAAkBQ,SAAUP,GACxCF,EAAgBU,KAAI,SAAAC,GAAQ,OACzB,4BAAQC,IAAKD,EAAUL,MAAOK,GAAWA,SCJ3DE,G,MAAU,0CA4EDC,MA1Ef,WAAgB,IAQVC,EAAUC,EARD,EACiCC,mBAAS,IAD1C,mBACNjB,EADM,KACWkB,EADX,OAE2BD,qBAF3B,mBAENE,EAFM,KAEQC,EAFR,OAGuBH,qBAHvB,mBAGNI,EAHM,KAGMC,EAHN,OAIeL,mBAAS,GAJxB,mBAINd,EAJM,KAIEoB,EAJF,OAK2CN,oBAAS,GALpD,mBAKNO,EALM,KAKgBC,EALhB,OAM2BR,qBAN3B,mBAMNS,EANM,KAMQC,EANR,KA+Cb,OArCIH,GACFR,EAAab,EACbY,EAAWZ,EAASuB,IAEpBX,EAAWZ,EACXa,EAAab,EAASuB,GAExBE,qBAAU,WACRC,MAAMhB,GACHiB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,IAAMC,EAAgBC,OAAOC,KAAKH,EAAKI,OAAO,GAC9CnB,EAAmB,CAACe,EAAKK,MAAP,mBAAgBH,OAAOC,KAAKH,EAAKI,UACnDf,EAAcY,GACdd,EAAgBa,EAAKK,MACrBX,EAAgBM,EAAKI,MAAMH,SAI9B,IAWHN,qBAAU,WACY,MAAhBT,GAAsC,MAAdE,GAC5BQ,MAAM,GAAD,OAAIhB,EAAJ,iBAAoBM,EAApB,oBAA4CE,IAC9CS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIN,EAAgBM,EAAKI,MAAMhB,SAE1C,CAACA,EAAYF,IAEd,yBAAKoB,UAAU,OACb,0FACA,uCAAY,uBAAGC,KAAK,0EAA0EC,OAAO,UAAzF,qBAAZ,MACA,2BAAG,uBAAGD,KAAK,kDAAkDC,OAAO,UAAjE,mBACH,6BACA,sDACA,kBAAC,EAAD,CACEzC,gBAAkBA,EAClBC,iBAAoBkB,EACpBjB,iBAAoB,SAAAwC,GAAC,OAAItB,EAAgBsB,EAAED,OAAOnC,QAClDF,eA3BN,SAAgCsC,GAC9BnB,EAAUmB,EAAED,OAAOnC,OACnBmB,GAAwB,IA0BpBtB,OAAUa,IAEZ,kCACA,kBAAC,EAAD,CACEhB,gBAAmBA,EACnBC,iBAAoBoB,EACpBnB,iBAAoB,SAAAwC,GAAC,OAAIpB,EAAcoB,EAAED,OAAOnC,QAChDF,eA/BN,SAA8BsC,GAC5BnB,EAAUmB,EAAED,OAAOnC,OACnBmB,GAAwB,IA8BpBtB,OAAUY,MCtElB4B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.af7e29e2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction CurrencyRow(props) {\r\n    const { currencyOptions, selectedCurrency, onChangeCurrency, amount, onChangeAmount} = props\r\n    return (\r\n        <div>\r\n            <input type=\"number\" value={Math.round(amount * 100) / 100} onChange={onChangeAmount}/>\r\n                <select value = {selectedCurrency} onChange={onChangeCurrency}>\r\n                    {currencyOptions.map(currency => (\r\n                        <option key={currency} value={currency}>{currency}</option>\r\n                    ))}\r\n                </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrencyRow","import React, { useEffect, useState } from 'react';\nimport CurrencyRow from \"./CurrencyRow\";\nimport './App.css';\n\n\nconst API_URL = \"https://api.exchangeratesapi.io/latest\"\n\nfunction App() {\n  const [currencyOptions, setCurrencyOptions] = useState([])\n  const [fromCurrency, setFromCurrency] = useState()\n  const [toCurrency, setToCurrency] = useState()\n  const [amount, setAmount] = useState(1)\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true)\n  const [exchangeRate, setExchangeRate] = useState()\n\n  let toAmount, fromAmount\n\n  if (amountInFromCurrency) {\n    fromAmount = amount\n    toAmount = amount * exchangeRate\n  } else {\n    toAmount = amount\n    fromAmount = amount / exchangeRate\n  }\n  useEffect(() => {\n    fetch(API_URL)\n      .then(res => res.json())\n      .then(data => {\n        const firstCurrency = Object.keys(data.rates)[0]\n        setCurrencyOptions([data.base, ...Object.keys(data.rates)])\n        setToCurrency(firstCurrency)\n        setFromCurrency(data.base)\n        setExchangeRate(data.rates[firstCurrency])\n      \n      \n      })\n  }, [])\n\n  function handleFromAmountChange(e) {\n    setAmount(e.target.value)\n    setAmountInFromCurrency(true)\n  }\n  function handleToAmountChange(e) {\n    setAmount(e.target.value)\n    setAmountInFromCurrency(false)\n  }\n\n  useEffect(() => {\n    if (fromCurrency != null && toCurrency != null) {\n    fetch(`${API_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\n      .then(res => res.json())\n      .then(data => setExchangeRate(data.rates[toCurrency]))\n    }\n  }, [toCurrency, fromCurrency])\n  return (\n    <div className=\"App\">\n      <h1>Built with React useState / useEffect hooks and API calls.</h1>\n      <p>Based on <a href=\"https://www.youtube.com/watch?v=XN5elYWiSuw&ab_channel=WebDevSimplified\" target=\"_blank\">this web tutorial</a>. </p>\n      <p><a href=\"https://github.com/StephenNoh/currencyconverter\" target=\"_blank\">See code here:</a></p>\n      <hr/>\n      <h1>Convert your currency:</h1>\n      <CurrencyRow \n        currencyOptions= {currencyOptions}\n        selectedCurrency = {fromCurrency}\n        onChangeCurrency = {e => setFromCurrency(e.target.value)}\n        onChangeAmount = {handleFromAmountChange}\n        amount = {fromAmount}\n        />\n      <div>=</div>\n      <CurrencyRow \n        currencyOptions ={ currencyOptions}\n        selectedCurrency = {toCurrency}\n        onChangeCurrency = {e => setToCurrency(e.target.value)}\n        onChangeAmount = {handleToAmountChange}\n        amount = {toAmount}\n        />\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}